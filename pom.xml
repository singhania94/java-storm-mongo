<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<groupId>com.citi</groupId>
	<artifactId>storm-kafka</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>storm-kafka</name>

	<parent>
		<groupId>com.citi.reghub</groupId>
		<artifactId>reghub-bom</artifactId>
		<version>1.1.0-SNAPSHOT</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<springbom.version>1.5.7.RELEASE</springbom.version>
		<camel.version>2.19.0</camel.version>
		<commons-io.version>2.5</commons-io.version>
		<curator.version>2.12.0</curator.version>
		<zookeeper.version>3.4.6</zookeeper.version>
		<drools.version>6.5.0.Final</drools.version>
		<gemfire.version>8.2.0</gemfire.version>
		<hazelcast.version>3.8.1</hazelcast.version>
		<jackson.version>2.8.10</jackson.version>
		<junit.version>4.12</junit.version>
		<kafka.version>0.11.0.2</kafka.version>
		<kafka.artifact.version>kafka_2.11</kafka.artifact.version>
		<kryo.version>4.0.0</kryo.version>
		<mockito.all.version>1.9.5</mockito.all.version>
		<mockito.core.version>2.6.8</mockito.core.version>
		<ocean.common.version>6.5_B5</ocean.common.version>
		<ocean.cacheservice.version>4.3_L5</ocean.cacheservice.version>
		<slf4jVersion>1.7.25</slf4jVersion>
		<spring.kafka.version>2.0.3.RELEASE</spring.kafka.version>
		<storm.version>1.1.0</storm.version>
		<provided.scope>provided</provided.scope>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
		<maven.compiler.plugin.version>3.6.2</maven.compiler.plugin.version>
		<maven.shade.plugin.version>3.0.0</maven.shade.plugin.version>
		<jacoco.maven.plugin.version>0.7.9</jacoco.maven.plugin.version>
		<nexus.releases.url>http://vm-1143-5c12:8081/nexus/content/repositories/releases/</nexus.releases.url>
		<nexus.snapshots.url>http://vm-1143-5c12:8081/nexus/content/repositories/snapshots/</nexus.snapshots.url>
	</properties>

	<dependencies>
		<!-- Need for local development -->
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>${storm.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.esotericsoftware</groupId>
					<artifactId>kryo</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-kafka</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-kafka-client</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.kafka</groupId>
					<artifactId>kafka-clients</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>${kafka.artifact.version}</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.citi.reghub.core</groupId>
			<artifactId>commons</artifactId>
			<version>1.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.citi.reghub.core</groupId>
			<artifactId>storm-commons</artifactId>
			<version>1.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.citi.reghub</groupId>
			<artifactId>test-utils</artifactId>
			<version>1.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>${kryo.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven.shade.plugin.version}</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.sf</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.dsa</exclude>
								<exclude>META-INF/*.RSA</exclude>
								<exclude>META-INF/*.rsa</exclude>
								<exclude>META-INF/*.EC</exclude>
								<exclude>META-INF/*.ec</exclude>
								<exclude>META-INF/MSFTSIG.SF</exclude>
								<exclude>META-INF/MSFTSIG.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
								</transformer>
							</transformers>
							<finalName>${project.artifactId}</finalName>
							<outputDirectory>${project.build.directory}/generated-jar</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.00</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
	</build>

	<repositories>
		<repository>
			<id>uno-service-snapshots</id>
			<name>Uno Service Snapshots</name>
			<url>http://vm-1143-5c12:8081/nexus/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>seed-snapshots</id>
			<url>http://vm-1143-5c12:8081/nexus/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>Releases</id>
			<name>Releases</name>
			<url>${nexus.releases.url}</url>
		</repository>
		<snapshotRepository>
			<id>Snapshots</id>
			<name>Snapshots Releases</name>
			<url>${nexus.snapshots.url}</url>
		</snapshotRepository>
	</distributionManagement>

</project>
